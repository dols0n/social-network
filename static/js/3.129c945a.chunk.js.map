{"version":3,"sources":["Components/Dialogs/Dialogs.module.css","Components/Dialogs/DialogsList/DialogsList.module.css","Components/Dialogs/DialogsList/DialogElementList/DialogElementList.module.css","Components/Dialogs/Dialogs.jsx","Components/Dialogs/DialogsList/DialogElementList/DialogElementList.jsx","Components/Dialogs/DialogsList/DialogsList.jsx","Components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogElement","props","messageObject","myMessage","className","s","dialogElement","userPhoto","src","ownerFullName","message","userSmallPhoto","fullName","InputMessageReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","inputField","placeholder","name","component","buttonField","Dialogs","usersDialogs","userId","Preloader","dialogs","headerDialog","to","headerButton","headerFullName","headerUserPhoto","dialogElementBLock","messages","map","noMessage","formField","value","sendMessage","deleteFormData","DialogElementList","dialogElementList","photoBlock","usersDialog","length","smallMessageImage","messageText","noMessageAlert","DialogsList","keys","Object","dialogList","key","compose","withAuthRedirect","connect","state","dialogsPage","myUserId","auth","id","ownerUserPhoto","createNewDialog","createNewDialogWithRequestPhoto","withRouter","match","params"],"mappings":"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","file":"static/js/3.129c945a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__1ykrV\",\"headerDialog\":\"Dialogs_headerDialog__180qy\",\"headerButton\":\"Dialogs_headerButton__eb6gU\",\"headerFullName\":\"Dialogs_headerFullName__2VPwT\",\"headerUserPhoto\":\"Dialogs_headerUserPhoto__1WC6w\",\"dialogElementBLock\":\"Dialogs_dialogElementBLock__2lsGv\",\"dialogElement\":\"Dialogs_dialogElement__1CYCO\",\"userPhoto\":\"Dialogs_userPhoto__26Txa\",\"ownerFullName\":\"Dialogs_ownerFullName__3J2eS\",\"message\":\"Dialogs_message__1kmoy\",\"noMessage\":\"Dialogs_noMessage__10rr6\",\"formField\":\"Dialogs_formField__2zHaU\",\"inputField\":\"Dialogs_inputField__1U2v_\",\"buttonField\":\"Dialogs_buttonField__1poQW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogElement\":\"DialogsList_dialogElement__3978g\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogElementList\":\"DialogElementList_dialogElementList__2LrqY\",\"photoBlock\":\"DialogElementList_photoBlock__23xbP\",\"fullName\":\"DialogElementList_fullName__31sjw\",\"messages\":\"DialogElementList_messages__3Gc1I\",\"userPhoto\":\"DialogElementList_userPhoto__3LiYs\",\"smallMessageImage\":\"DialogElementList_smallMessageImage__1iH55\",\"messageText\":\"DialogElementList_messageText__2hoTN\",\"noMessageAlert\":\"DialogElementList_noMessageAlert__zlDWe\"};","import s from './Dialogs.module.css'\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nconst DialogElement = (props) => {\r\n\r\n\r\n    return(\r\n        <div>\r\n\r\n                {props.messageObject.myMessage ?\r\n                    <div className={s.dialogElement}>\r\n                        <img className={s.userPhoto} src={props.userPhoto} />\r\n                        <b className={s.ownerFullName}>{props.ownerFullName}</b>\r\n                        <span className={s.message}>{props.messageObject.message}</span>\r\n                    </div>\r\n                :\r\n                    <div className={s.dialogElement}>\r\n                        <img className={s.userPhoto} src={props.userSmallPhoto} />\r\n                        <b className={s.ownerFullName}>{props.fullName}</b>\r\n                        <span className={s.message}>{props.messageObject.message}</span>\r\n                    </div>\r\n                }\r\n        </div>\r\n    )\r\n}\r\n\r\nconst InputMessageForm = (props) => {\r\n    return(\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field className={s.inputField} placeholder={'your message'} name={'message'} component={'input'} />\r\n                <button className={s.buttonField}>Send</button>\r\n            </div>\r\n\r\n        </form>\r\n    )\r\n}\r\n\r\nconst InputMessageReduxForm = reduxForm({form: 'messageForm'})(InputMessageForm)\r\n\r\nconst Dialogs = (props) => {   // Dialog\r\n    if(!props.usersDialogs[props.userId]){\r\n        return <Preloader />\r\n    }\r\n\r\n    const sendMessage = (value) => {\r\n        props.sendMessage(value.message, props.userId)\r\n        props.deleteFormData()\r\n    }\r\n\r\n    return(\r\n        <div className={s.dialogs}>\r\n            <div className={s.headerDialog}>\r\n                <NavLink to={'/dialogs'}>\r\n                    <button className={s.headerButton}>Back</button>\r\n                </NavLink>\r\n                <NavLink className={s.headerFullName} to={`/profile/${props.userId}`}>\r\n                    <b>{props.usersDialogs[props.userId].fullName}</b>\r\n                </NavLink>\r\n                <NavLink className={s.headerUserPhoto} to={`/profile/${props.userId}`}>\r\n                    <img src={props.usersDialogs[props.userId].userSmallPhoto} />\r\n                </NavLink>\r\n            </div>\r\n            <div className={s.dialogElementBLock}>\r\n                {props.usersDialogs[props.userId].messages[0] ?\r\n                    props.usersDialogs[props.userId].messages.map(messageObject => {\r\n                        return <DialogElement messageObject={messageObject}\r\n                                              userSmallPhoto={props.usersDialogs[props.userId].userSmallPhoto}\r\n                                              userPhoto={props.userPhoto}\r\n                                              fullName={props.usersDialogs[props.userId].fullName}\r\n                                              ownerFullName={props.ownerFullName}\r\n                        />\r\n                    })\r\n                :\r\n                    <div className={s.noMessage}>there are no messages here yet</div>\r\n                }\r\n            </div>\r\n            <div className={s.formField}>\r\n                <InputMessageReduxForm onSubmit={sendMessage}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Dialogs","import {NavLink} from \"react-router-dom\";\r\nimport s from './DialogElementList.module.css'\r\nimport image from './../../../../assets/image/postPhoto.jpg'\r\n\r\n\r\nconst DialogElementList = (props) => {\r\n\r\n    const smallMessageImage = () => {\r\n        if(props.usersDialog.messages[0]){\r\n            if(props.usersDialog.messages[props.usersDialog.messages.length - 1].myMessage){\r\n                return <div>\r\n                    <img className={s.smallMessageImage} src={props.userPhoto}/>\r\n                    <span className={s.messageText}>{props.usersDialog.messages[props.usersDialog.messages.length - 1].message}</span>\r\n                </div>\r\n            }\r\n            return <div>\r\n                <img className={s.smallMessageImage} src={props.usersDialog.userSmallPhoto}/>\r\n                <span className={s.messageText}>{props.usersDialog.messages[props.usersDialog.messages.length - 1].message}</span>\r\n            </div>\r\n        }\r\n        return <div className={s.noMessageAlert}>you have not written to this user, WRITE TO HIM!</div>\r\n    }\r\n\r\n    return (\r\n        <NavLink to={`/dialogs/${props.userId}`} className={s.dialogElementList}>\r\n            <div className={s.photoBlock}>\r\n                    <img className={s.userPhoto} src={props.usersDialog.userSmallPhoto}/>\r\n            </div>\r\n            <div className={s.fullName}>\r\n                {props.usersDialog.fullName}\r\n            </div>\r\n\r\n            <div className={s.messages}>\r\n                {smallMessageImage()}\r\n            </div>\r\n\r\n        </NavLink>\r\n    )\r\n}\r\n\r\n\r\nexport default DialogElementList","import s from './DialogsList.module.css'\r\nimport DialogElementList from \"./DialogElementList/DialogElementList\";\r\n\r\n\r\n\r\n\r\n\r\nconst DialogsList = (props) => {\r\n    let keys = Object.keys(props.usersDialogs)\r\n    if(!keys[0]){\r\n        return <div>You have no messages yet</div>\r\n    }\r\n    return(\r\n        <div className={s.dialogList}>\r\n            {keys.map(key => {\r\n                return(\r\n                    <div className={s.dialogElement}>\r\n                        <DialogElementList usersDialog={props.usersDialogs[key]}\r\n                                           userId={key}\r\n                                           userPhoto={props.userPhoto}\r\n                        />\r\n                    </div>\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default DialogsList","import React, {useEffect} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {withRouter} from \"react-router\";\r\nimport {createNewDialog, createNewDialogWithRequestPhoto, sendMessage} from \"../../redux/dialogs-reducer\";\r\nimport {deleteFormData} from \"../../redux/redux-store\";\r\nimport DialogsList from \"./DialogsList/DialogsList\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\n\r\nconst DialogsContainer = (props) => {\r\n    const userId = props.match.params.userId\r\n\r\n\r\n    if(!props.usersDialogs[userId] || !props.usersDialogs[userId].userSmallPhoto){\r\n        if(userId) {\r\n            props.createNewDialogWithRequestPhoto(userId)\r\n        }\r\n    }\r\n    return(\r\n        <div>\r\n            {userId ?\r\n                <Dialogs usersDialogs={props.usersDialogs}\r\n                         userId={userId}\r\n                         sendMessage={props.sendMessage}\r\n                         userPhoto={props.userPhoto}\r\n                         ownerFullName={props.ownerFullName}\r\n                         deleteFormData={props.deleteFormData}\r\n                />\r\n            :\r\n                <DialogsList usersDialogs={props.usersDialogs}\r\n                             userPhoto={props.userPhoto}\r\n                />\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return{\r\n        usersDialogs: state.dialogsPage.usersDialogs,\r\n        myUserId: state.auth.id,\r\n        userPhoto: state.auth.ownerUserPhoto,\r\n        ownerFullName: state.auth.fullName,\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    withAuthRedirect,\r\n    connect(mapStateToProps, {createNewDialog, createNewDialogWithRequestPhoto, sendMessage,\r\n    deleteFormData}),\r\n    withRouter\r\n)(DialogsContainer)\r\n\r\n\r\n"],"sourceRoot":""}